name: CI/CD Pipeline

on:
  push:
    branches:
      - 'task-*'
      - 'feature-*'
      - 'bugfix-*'
      - 'feature/*'
      - 'bugfix/*'
      - 'dev'
      - 'qa'
      - 'hotfix-*'
      - 'test'
      - 'sit'
      - 'uat'
      - 'demo'
      - 'pre-prod'
      - 'master'

jobs:
  scan-git-secrets:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/task-')
    steps:
      - uses: actions/checkout@v2
      - name: Set up environment
        run: sudo apt-get update && sudo apt-get install -y git make bash
      - name: Install Git Secrets
        run: |
          git clone https://github.com/awslabs/git-secrets.git
          cd git-secrets
          sudo make install
      - name: Scan Git Secrets
        run: source ./ops/ci/git-secrets.sh

  initial-tests:
    runs-on: ubuntu-latest
    if: |
      startsWith(github.ref, 'refs/heads/feature-') ||
      startsWith(github.ref, 'refs/heads/bugfix-') ||
      startsWith(github.ref, 'refs/heads/dev') ||
      startsWith(github.ref, 'refs/heads/qa') ||
      startsWith(github.ref, 'refs/heads/hotfix-') ||
      startsWith(github.ref, 'refs/heads/test') ||
      startsWith(github.ref, 'refs/heads/sit') ||
      startsWith(github.ref, 'refs/heads/uat') ||
      startsWith(github.ref, 'refs/heads/demo') ||
      startsWith(github.ref, 'refs/heads/pre-prod') ||
      github.ref == 'refs/heads/master'
    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        env:
          POSTGRES_DB: node_microservice
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_user_password
    env:
      DB_NAME: node_microservice
      DB_USER_NAME: test_user
      DB_PASSWORD: test_user_password

    steps:
      - uses: actions/checkout@v2
      - name: Set up environment
        run: sudo apt-get update && sudo apt-get install -y git make bash
      - name: Install Git Secrets
        run: |
          git clone https://github.com/awslabs/git-secrets.git
          cd git-secrets
          sudo make install
      - name: Install pnpm
        run: npm install -g pnpm@8.15.7
      - name: Install NPM Packages
        run: pnpm i
        working-directory: ./server
      - name: Wait for PostgreSQL to be ready
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          until pg_isready -h localhost -p 5432 -U test_user; do
            sleep 1
          done
      - name: Scan Git Secrets
        run: source ./ops/ci/git-secrets.sh
      - name: Run Test Cases
        run: npm run test
        working-directory: ./server

  prune-and-docker:
    runs-on: ubuntu-latest
    needs: initial-tests
    if: |
      startsWith(github.ref, 'refs/heads/dev') ||
      startsWith(github.ref, 'refs/heads/qa') ||
      startsWith(github.ref, 'refs/heads/hotfix-')
    steps:
      - uses: actions/checkout@v2
      - name: Prune Unnecessary Modules
        run: npm prune --production
        working-directory: ./server
      - name: Copy Dockerfile
        run: |
          cp ./Dockerfile ./server
          cp ./.dockerignore ./server
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, and push Docker image
        run: bash ./ops/ci/push-docker-image-ecr.sh ./server

  create-tag:
    runs-on: ubuntu-latest
    needs: prune-and-docker
    steps:
      - uses: actions/checkout@v2
      - name: Create Tag
        run: |
          sudo apt-get update
          sudo apt-get install -y bash curl git
          bash ./ops/ci/create-tag.sh
